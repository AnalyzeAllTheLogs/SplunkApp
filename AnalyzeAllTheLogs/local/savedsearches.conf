
[SmartQuotes]
action.email.useNSSubject = 1
alert.track = 0
description = Use Case: Scheduled searches, which include notable events, might unknowingly have a different unicode than a double quote character. This might not produce the desired output (i.e., notable produces no results, when in actuality there are events).\
\
References: https://www.windowscentral.com/change-smart-quotes-straight-quotes-microsoft-office-word-outlook-powerpoint
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = AnalyzeAllTheLogs
request.ui_dispatch_view = search
search = index=_audit sourcetype=audittrail search_id="*scheduler_*" ("“" OR "”") AND search!=""\
| stats count by user savedsearch_name search

[User Capabilities (and quota)]
action.email.useNSSubject = 1
alert.track = 0
description = Use Case: Determine what users actually can do within the platform and also see what the max quota for search head space is actually available (which is helpful for multiple roles & inheritance).
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = AnalyzeAllTheLogs
request.ui_dispatch_view = search
search = | rest /services/authorization/roles\
| eval temp=if(srchIndexesAllowed=="_*" OR srchIndexesAllowed=="_audit" OR srchIndexesAllowed=="_internal", title, NULL)\
| eval temp2=if(temp==imported_roles, imported_roles, NULL)\
| eval roles=coalesce(temp, temp2)\
| eval actual_capabilities=mvdedup(mvappend(capabilities,imported_capabilities))\
| eval actual_indexes=mvdedup(mvappend(srchIndexesAllowed,imported_srchIndexesAllowed))\
| eval actual_diskQuota=mvdedup(mvappend(srchDiskQuota,imported_srchDiskQuota))\
| eval actual_jobQuota=mvdedup(mvappend(srchJobsQuota,imported_srchJobsQuota))\
| stats values(actual_capabilities) as actual_capabilties, values(actual_indexes) as actual_indexes, max(actual_diskQuota) as actual_diskQuota, max(actual_jobQuota) as actual_jobQuota count by title\
| rename title as role

[Users permission diff]
action.email.useNSSubject = 1
alert.track = 0
description = Use Case: Find if two users have differences in accounts for troubleshooting and auditing (put usernames in tokens, or create dashboard with two inputs). Can be combined with User Capabilities search for more granular views.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = AnalyzeAllTheLogs
request.ui_dispatch_view = search
search = | rest /services/authentication/users splunk_server=local \
| rename title as user\
| search user="$user1$" OR user="$user2$"\
| table user type roles capabilities defaultApp\
| stats values(user) as users count by capabilities\
| search count=1

[Monitor for Removals (draft)]
action.email.useNSSubject = 1
alert.track = 0
description = Use Case: Looking for users (in a domain) where they did a removal of an object. Experimental search which needs more testing to validate they did the action.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.visualizations.show = 0
request.ui_dispatch_app = AnalyzeAllTheLogs
request.ui_dispatch_view = search
search = (index=_internal OR index=audit) "@domain.com"  "data.task"=addCommit "data.optype_desc"="*MOVE"

[List of Indexes]
action.email.useNSSubject = 1
alert.track = 0
description = Use Case: Useful for dashboard panels to view which indexes are available. Potentially a lookup (having index name and description info) to join for a living knowledge base.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = AnalyzeAllTheLogs
request.ui_dispatch_view = search
search = | rest /services/data/indexes\
| search minTime!="" AND maxTime!=""\
| stats last(minTime) as Earliest last(maxTime) as Recent last(updated) as "Last Updated"  sum(totalEventCount) AS count by title \
| eval count=tostring(count,"commas")\
| search title=*

[_internal Auditing]
action.email.useNSSubject = 1
alert.track = 0
description = Use Case: Search (should) identify users searching _internal or _audit logs. Should catch these two variants, needs testing (index=_* && index="_*).\
• This should also show the role and type of authentication for the user (potentially even if this came from a dashboard).\
• This should display the query (and number of times any search within the internal logs ran that day).\
• It should show nothing in the role column if a person doesn't have explicit rights to view the internal indexes, in theory.\
• Since this would be an edge case it would be hard to trigger but regardless it will display the original goal.\
Caveats:\
• This is based on the current permissions at the time of the search, so not retrospective of when the search ran.\
• Scheduling would be advised to be most accurate\
• Less readable, but someone can just scroll quickly through the similar events; minor inconvenience.\
• If you see multiple lines, mostly incomplete, that is the predictive search output from Splunk (like Google uses)... it isn't an issue with the search head.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = AnalyzeAllTheLogs
request.ui_dispatch_view = search
search = index="_internal" source="*splunkd_ui_access.log" (search="*_\**" OR search="*_internal*" OR search="*_audit*") \
| eval search=urldecode(search) \
| eval Day=strftime(_time, "%F %Z") \
| fillnull \
| stats count by Day user search namespace referer \
| rex field=search "search (index=_|index=\"_)(?<True>.{1,8}\W)" \
| eval match=if(True!="",1,0) \
| join type=left user \
    [| rest /services/authentication/users splunk_server=local \
    | fields title roles type \
    | rename title as user \
    | search \
        [| rest /services/authorization/roles \
        | table title srchIndexesAllowed imported_srchIndexesAllowed roles imported_roles \
        | search (srchIndexesAllowed="_\*" OR imported_srchIndexesAllowed="_\*") \
        | eval temp=if(srchIndexesAllowed=="_*" OR srchIndexesAllowed=="_audit" OR srchIndexesAllowed=="_internal", title, NULL) \
        | eval temp2=if(temp==imported_roles, imported_roles, NULL) \
        | eval roles=coalesce(temp, temp2) \
        | fields roles \
        | dedup roles] \
    | fields user roles type] \
| stats values(search) as search, count by user roles type Day match namespace referer \
| where match=1 \
| fields - match
